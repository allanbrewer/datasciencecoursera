librar(swirl)
library(swirl)
swirl()
getwd()
q()
library(swilr)
library(swirl)
library(swirl)
install.packages("swirl")
library(swirl)
swirl()
library(dplyr)
library(ggplot)
library(ggplot2)
library(jsonlite)
install.packages("ggplot2")
 install_course_zip("~/Downloads/swirl_courses-master.zip", multi=TRUE)
.libPaths()
update.packages(ask = FALSE, dependencies = c("Suggests")
)
library(swirl)
Sys.info
Sys.info()
ls()
swirl()
1 - (2+1)/36
deck
52
4/52
0
12/52
2/51
0.8*1.6/2
64%
0.64
mypdf
integrate(mypdf, 0, 1.6)
sqrt(2)
dev.cur()
dev.0ff()
dev.off()
swirl()
0.997*0.001
(1-0.997)(1-0.001)
(1-0.997)*(1-0.001)
(1-0.985)*(1-0.001)
0.002997/(0.002997*0.14985)
0.002997/(0.002997+0.14985)
(0.997*0.001) / ((0.997*0.001)+(0.015*0.999)
)
3.5
expect_dice
dice_high
expect_dice(dice_high)
expect_dice(dice_low)
0.5(edh+edl)
0.5*(edh+edl)
integrate(myfunc, 0 , 2)
spop
mean(spop)
allsam
apply(allsam, 2, mean)
apply(allsam, 1, mean)
smeans
mean(smeans)
q()
library(swirl)
swirl()
dice_sqr
ex2_fair <- dice_sqr * dice_fair
ex2_fair <- sum(dice_sqr * dice_fair)
ex2_fair - 3.5^2
sum(dice_sqr * dice_high) - edh^2
sd(apply(matrix(rnorm(10000),1000),1,mean))
1/swrt(10)
1/sqrt(10)
1/sqrt(120)
sd(apply(matrix(runif(10000),1000),1,mean))
2/sqrt(10)
sd(apply(matrix(rpois(10000),1000),1,mean))
sd(apply(matrix(rpois(10000,4),1000),1,mean))
1/sqrt(10)*2
1/(2*sqrt(10))
sd(apply(matrix(sample(0:1,10000,TRUE),1000),1,mean))
chosse(5,3)
choose(5,3)
for (i in 3:5) { choose(5,i)*(0.8)^i*(0.2)^(5-i)}
for (i in 3:5) {choose(5,i)*(0.8)^i*(0.2)^(5-i)}
choose(5,3)*(0.8)^3*(0.2)^(5-3)
choose(5,3)*(0.8)^3*(0.2)^(5-3) + choose(5,4)*(0.8)^4*(0.2)^(x-4) + chosse(5,5)*(0.8)^5*(0.2)^(5-5)
choose(5,3)*(0.8)^3*(0.2)^(5-3) + choose(5,4)*(0.8)^4*(0.2)^(x-4) + choose(5,5)*(0.8)^5*(0.2)^(5-5)
choose(5,3)*(0.8)^3*(0.2)^(5-3) + choose(5,4)*(0.8)^4*(0.2)^(5-4) + choose(5,5)*(0.8)^5*(0.2)^(5-5)
pbinom(2,5,0.8,lower.tail=F)
pbinom(2,size=5,prob=0.8,lower.tail=F)
pbinom(2,size=5,prob=.8,lower.tail=FALSE)
QNORM(0.1)
qnorm(0.1)
0
qnorm(0.975,3,2)
3 + 2*1.96
pnorm(1200,1020,50,lower.tail=F)
pnorm(1200,mean=1020,sd=50,lower.tail=FALSE)
pnorm((1200-1020/50))
pnorm((1200-1020/50),lower.tail=FALSE)
pnorm((1200-1020)/50,lower.tail=FALSE)
qnorm(0.75,1020,50)
0
pnorm(qnorm(.53))
0.53
ppois(2.5*4)
ppois(3,2.5*4)
pbinom(size=1000,prob=0.1,size=5)
pbinom(size=1000,prob=0.1,q=5)
pbinom(5,1000,0.01)
ppois(5,1000*0.01)
q()
library(swirl)
swirl()
coinPlot(10)
coinPlot(1000)
coinPlot(10000)
qnorm(0.95)
0.6 + c(-1,1)*qnorm(0.975)*sqrt(0.6*(1-0.6)/100))
0.6 + c(-1,1)*qnorm(0.975)*sqrt(0.6*(1-0.6)/100)
.6 + c(-1,1)*qnorm(.975)*sqrt(.6*.4/100)
x$conf.int
binom.test(60,100)$conf.int
mywald(.2)
ACCompar(20)
lamb <- 5/94.32
lamb + c(-1,1) * qnorm(.975) * sqrt(lamb)
lamb + c(-1,1) * qnorm(.975) * sqrt(lamb/94,32)
lamb + c(-1,1) * qnorm(.975) * sqrt(lamb/94.32)
poisson.test(5,94.32)$conf
q()
library(swirl)
swirl()
myplot(2)
myplot(20)
myplot(2)
myplot2(2)
qt(0.975,2)
myplot2(20)
sleep
range(g1)
range(g2)
g2 - g1
difference <- g2 - g1
mean(difference)
sd(difference)
s <- sd(difference)
mn + c(-1,1) * qt(0.975,9) * s/sqrt(10)
t.test(difference)$conf.int
(8-1)*(15.34)^2 + (21-1)*(18.23)^2
7*15.34^2 + 20*18.23^2
sp <- 7*15.34^2 + 20*18.23^2
ns <- 27
sp/ns
sp <- aqrt(sp/ns)
sp <- sqrt(sp/ns)
132.86-127.44 + c(-1,1) * qt(0.975,ns) * sp*sqrt((1/8)+(1/21))
132.86-127.44+c(-1,1)*qt(0.975,ns)*sp*sqrt(1/8+1/21)
sp <- 7*15.34^2 + 20*18.23^2
sp <- sqrt((9*var(g1)+9*var(g2))/18)
md+c(-1,1)*qt(0.975,18)*sp*sqrt(1/10+1/10)
t.test(g2,g1,paired=FALSE,var.equal=TRUE)$conf.int
t.test(g2,g1,paired=FALSE,var.equal=TRUE)$conf
t.test(g2,g1,paired=TRUE)$conf
num <- (15.34^2/8+18.23^2/21)^2
den <- 15.34^4/8^2/(8-1) + 18.23^4/21^2/(21-1)
num/den
mydf <- num/den
132.86-127.44+c(-1,1)*qt(.975,mydf)*15.34^2/8+18.23^2/21
132.86-127.44+c(-1,1)*qt(.975,mydf)*aqrt(15.34^2/8+18.23^2/21)
132.86-127.44+c(-1,1)*qt(.975,mydf)*sqrt(15.34^2/8+18.23^2/21)
q()
swirl()
library(swirl)
swirl()
1
swirl()
swirl()
pt(2.5,15,lower.tail=FALSE)
qnorm(0.95)
qnorm(0.99)
swirl()
pnorm(2)
pnorm(2, lower.tail = FALSE)
mybin
pbinom(6,8,.5,lower.tail=FALSE)
pbinom(7,8,.5,lower.tail=TRUE)
ppois(5,9,lower.tail=FALSE)
ppois(9,5,lower.tail=FALSE)
32-30/1
2
(32-30)?(10/4)
(32-30)/(10/4)
15
tq(.95)
qt(.95)
qt(.95,15)
dim(fs)
t.test(fs$sheight, fs$fheight)
t.test(fs$sheight-fs$fheight)
11.7885 * sd(fs$sheight-fs$fheight)/sqrt(1078)
mybin
7
6
8
q()
swirl()
library(swirl)
swirl()
myplot(34)
myplot(33.3)
myplot(30)
myplot(28)
z <- qnorm(.95)
pnorm(30 + z, mean = 30, lower.tail=FALSE)
pnorm(30 + z, mean = 32, lower.tail=FALSE)
pnorm(30 + z, mean = 32, sd = 1, lower.tail=FALSE)
pnorm(30 + z*2, mean = 32, sd = 2, lower.tail=FALSE)
p.power.test(n=16, delta=2/4, sd=1, type="one.sample", alt="one.sided")$power
power.t.test(n=16, delta=2/4, sd=1, type="one.sample", alt="one.sided")$power
power.t.test(n=16, delta=2, sd=4, type="one.sample", alt="one.sided")$power
power.t.test(n=16, delta=100, sd=200, type="one.sample", alt="one.sided")$power
power.t.test(power=0.8, delta=2/4, sd=1, type="one.sample", alt="one.sided")$n
power.t.test(power=0.8, delta=2, sd=4, type="one.sample", alt="one.sided")$n
power.t.test(power=0.8, delta=100, sd=200, type="one.sample", alt="one.sided")$n
power.t.test(power=0.8, n=26, sd=1, type="one.sample", alt="one.sided")$n
power.t.test(power=0.8, n=26, sd=1, type="one.sample", alt="one.sided")$delta
power.t.test(power=0.8, n=27, sd=1, type="one.sample", alt="one.sided")$delta
q()
library(swirl)
swirl()
pValues
head(pValues
)
sum(pvalues < 0.050
)
sum(pValues < 0.05)
sum(p.adjust(pValues, method = "bonferroni") < 0.05)
sum(p.adjust(pValues, method = "BH") < 0.05)
tail(trueStatus)
table(pValues2 < 0.5, trueStatus)
table(pValues2 < 0.05, trueStatus)
24/500*100
24/500
table(p.adjust(pValues2, method = "bonferroni") < 0.05, trueStatus)
table(p.adjust(pValues2, method = "BH") < 0.05, trueStatus)
1/6+2/6+3/6+4/6+5/6+6/6
g2
print(g2)
head(sh)
nh
median(resampledMedians)
median(sh)
sam <- sample(fh, nh * B, replace = TRUE)
resam <- matrix(sam,B,nh)
meds <- apply(resam,1,median)
median(fh) - median(meds)
sd(meds)
sd(resampledMedians)
quantile(resampledMedians,c(0.025,0.975))
quantile(meds,c(0.025,0.975))
dim(InsectSprays)
names(InsectSprays)
Bdata$count
range(Bdata$count)
range(Cdata$count)
BCcounts
group
testStat
obs <- testStat(BCcounts, group)
obs
mean(Bdata$count) - mean(Cdata$count)
sample(group)
perms <- sapply(1:10000, function(i) testSat(BCcounts, sample(group)))
perms <- sapply(1:10000, function(i) testStat(BCcounts, sample(group)))
mean(perms > obs)
testStat(DEcounts, group)
perms <- sapply(1:10000, function(i) testStat(DEcounts, sample(group)))
q()
