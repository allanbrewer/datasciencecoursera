unclass(as.Date("1970-12-31"))
unclass(as.Date("1971-12-31"))
unclass(as.Date("1971-01-01"))
unclass(as.Date("1972-01-01"))
unclass(as.Date("1974-01-01"))
unclass(as.Date("1978-01-01"))
unclass(as.Date("1977-01-01"))
unclass(as.Date("1972-01-01"))
unclass(as.Date("1973-01-01"))
unclass(as.Date("1974-01-01"))
?rnorm
data(iris)
?iris
iris
vir <- identical(iris$Species == "virginica")
?identical
vir <- identical(iris$Species, "virginica")
vir
species <- iris$Species
species
vir <- species == "virginica"
vir
vir_sep <- iris[vir,"Sepal.Length"]
vir_sep
mena(vir_sep)
mean(vir_sep)
iris
data(mtcars)
?mtcars
a <- array(rnorm(2 * 2 * 10), c(2, 2, 10))
a
rnorm(2*2*10)
data(mtcars)
mtcars
tapply(mtcars$cyl, mtcars$mpg, mena)
tapply(mtcars$cyl, mtcars$mpg, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
?with
summary(mtcars)
str(mtcars)
split(mtcars$mpg, mtcars$cyl)
data(airquality)
airquality
split(airquality[,1:4], airquality$Month)
split(airquality, airquality$Month)
?with
with(mtcars, tapply(mpg,cyl,mean))
tapply(mtcars$mpg, mtcars$cyl, mean)
mtcars
hp_cyl <- split(mtcars$hp, mtcars$cyl)
hp_cyl
mean(hp_cyl$8)
mean(hp_cyl$"8")
tapply(mtcars$hp, mtcars$cyl,mean)
mean(hp_cyl$"8")-mean(hp_cyl$"4")
ls
?ls
ls(hp_cyl)
ls(mtcars)
debug(ls)
ls(hp_cyl)
x <- data.frame("id"=1:10,"random"=rnorm(10))
x
ls(x)
data(mtcars)
data(iris)
ls(iris)
ls(mtcars)
str(mtcars)
str(iris)
invisible(x)
return(x)
str(return)
is.na(NA)
is.na(NaN)
Nan
NaN
tapply(iris$Sepal.Length, iris$Species, mena)
tapply(iris$Sepal.Length, iris$Species, mean)
rm(x)
rm
x <- list(NA, 2, 4, 5)
na.rm(x)
rm.na(x)
?mean
mean
library(swirl)
swirl()
install_from_swirl("Mathematical Biostatistics Boot Camp")
version
source("~/desktop/cachemean.R")
source("~/desktop/cachevector.R")
data(iris)
str(iris)
mean(iris$Petal.Width)
mean(iris$Petal.Width) m
mean(iris$Petal.Width) m <<- 3
m <<- 3
m<- 3
m<- 4
m <<- 3
rm(m)
rm(iris)
data(iris)
rm(iris)
f <- gl(3,5)
f
rm(f)
system.time()
?system.time()
?expr
??expr
?<<-
??<<-
rpois(5,2)
pois
?rpois
?set.speed
?set.seed
set.seed(1)
rpois(5,2)
rbinom(10,10,0.5)
rbinom(1,10,0.5)
rbinom(10,1,0.5)
rbinom(10,10,0.5)
set.seed(1)
rpois(5,2)
st.seed(10)
set.seed(10)
x <- rbinom(10,10,0.5)
e <- rnorm(10,0,20)
y <- 0.5 + 2*x + e
plot(x,y)
rpois
rpois(10,10)
hist(rpois(100,10))
hist(rpois(100,20))
hist(rpois(100,50))
hist(rpois(100,1))
hist(rpois(100,4))
?lm
lm(x ~ y)
lm(x ~ y)
system.time(lm(x ~ y))
set.seed(1)
rpois(5,2)
library()
library(swirl)
swirl()
5+7
x <- 5+7
x
y ,- x-3
y <- x-3
y
z <- c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z*2+100
z*2+1000
my_div
getwd()
ls()
x <- 9
ls()
list.files()
?list.files
args(list.files())
args(list.files
)
old.dir <- getwd()
t
old.dir <- getwd()
dir.create("testdir")
setwd("~/testdir")
setwd("testdir")
setwd("testdir")
setwd("~/")
setwd("testdir")
file.create("mytest.R
")
file.create("mytest.R")
ls()
list.files)
list.files()
list.files()
file.exists("mytest.R")
file.exists("mytest.R")
file.info("mytest.R")
file.info("mytest.R")
fiel.rename("mytest.R", "mytest2.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
~/
file.path("mytest3.R")
dir.create("testdir2/testdir3")
dir.create("testdir2/testdir3", recursive=TRUE)
dir.delete("testdir2")
dir.create("testdir2/testdir3", recursive=TRUE)
unlink("testdir2", recursive=TRUE)
setwd("~/testdir")
setwd(old.dir)
unlink("testdir", recursive = T)
unlink("testdir", recursive = TRUE)
q
rm(list=ls())
ls()
list()
library()
library("swirl")
swirl()
getwd()
ls()
x <- 9
ls()
list.files()
q()
library("swirl")
swirl()
1:20
pi:20
pi:10
15:1
?`:`
seq(1,20)
seq(1,10,by=-.5)
seq(1,10,by=0.5)
seq(0,10,by=0.5)
seq(5,10,length=30)
my_seq <- seq(5,10,length=30)
my_seq
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0 , times=40)
rep(c(0,1,2) , times=10)
rep(c(0,1,2) , each=10)
num_vect <- c(0.5,55,-10,6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_char <- c(my_char,"Allan")
my_name <- c(my_char,"Allan")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world", sep = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X","Y","Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
4
swirl()
x <- c(44,NA,5,NA)
x*3
y <- rnorm(1000)
z <- rep(NA,1000)
my_data <- sample(c(y,z),100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf - Inf
swirl()
library("swirl")
swirl()
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo", "bar", "norf")
identical
identical(vect,vect2)
vect["bar"]
vect[c("foo, "bar)]
vect[c("foo", "bar")]
clear()
rm(list=lis())
rm(list=ls())
x <- read.csv("specdata/001.csv",header=T)
setwd("~/Desktop/datasciencecoursera/R_Programming/Assignment_1")
x <- read.csv("specdata/001.csv",header=T)
y <- read.csv("specdata/002.csv",header=T)
mierda <- x$sulfate
mierda
mierda <- c(mierda, y$sulfate)
mean(mierda,na.rm=T)
rm(list=ls())
source(pollutantmean.R)
source("pollutantmean.R")
pollutantmena("specdata","sulfate",1:10)
pollutantmean("specdata","sulfate",1:10)
pollutantmean("specdata","nitrate",70:72)
pollutantmean("specdata","nitrate",23)
source("submitscript1.R")
submit()
2
submit()
submit()
submit()
id <- 20:40
data.frame("id"=id,"nobs"=id)
nobs_df <- data.frame("id"=id,"nobs"=id)
nobs_df[5,"nobs"] <- 30
nobs_df
rm(nobs_df)
rm(id)
source(complete;R)
source(complete.R)
source("complete.R")
submit
submit()
submit()
submit()
numeric()
x <- numeric(0)
x <- numeric(5)
x <- numeric()
x <- numeric(5)
x <- numeric(0)
rm(x)
source("corr.R")
submit()
submit()
submit()
x <- read.csv("specdata/001.csv")
cc <- complete.cases(x)
x_complete <- x[cc,c(2,3)]
x_complete
ncc <- nrow(x_complete)
ncc <- sum(cc)
sum(cc)
args(cor)
cor(x_complete)
cor(x_complete)[1,2]
cor(x_complete)[2,1]
cor_comp <- cor(x_complete)
cor_comp
cor_comp[1,2]
cor(x_complete)[2,1] == cor_comp[1,2]
cor(x_complete)[2,1] === cor_comp[1,2]
cor(x_complete)[2,1] == cor_comp[1,2]
cor(x_complete)[2,1] = cor_comp[1,2]
x = 4
rm(list=ls())
