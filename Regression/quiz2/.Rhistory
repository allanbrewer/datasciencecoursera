x <- c(0.61,0.93,0.83,0.35,0.54,0.16,0.91,0.62,0.62)
y <- c(0.67,0.84,0.6,0.18,0.85,0.47,1.1,0.65,0.36)
fit <- lm(x ~ y)
summary(fit
)
fit <- lm(y ~ x)
summary(fit)
data(mtcars)
fit2 <- lm(mtcars$mpg ~ mtcars$weight)
fit2 <- lm(mtcars$mpg ~ mtcars$wt)
coefs <- coefficients(fit2)
coefs
coefs <- coef(fit2)
coefs
summary(fit2)
fit2$coefficients
?mtcars
predict(fit2,newdata = mean(mtcars$mpg), interval=("confidence"))
predict(fit2,newdata = mtcars$mpg, interval=("confidence"))
mtcars$mpg
mean(mtcars$mpg)
predict(fit2,newdata = c(mean(mtcars$mpg)), interval=("confidence"))
predict(fit2,newdata = data.frame(mean = mean(mtcars$mpg)), interval=("confidence"))
predict(fit2,newdata = data.frame(mean = mtcars$mpg), interval=("confidence"))
predict(fit2,newdata = data.frame(mtcars$mpg), interval=("confidence"))
mean(mtcars$mpg)
seq(min(mtcars$wt),max(mtcars$wt),length-100)
seq(min(mtcars$wt),max(mtcars$wt),length=100)
predict(fit2,newdata = data.frame(mtcars$wt), interval=("confidence"))
mean(mtcars$wt)
mtcars$wt
predict(fit2,newdata = data.frame(mtcars$wt), interval=("prediction"))
q()
ls()
X <- mtcars$wt
y <- mtcars$mpg
fit2 <- lm(y ~ x)
y
x
x <- mtcars$wt
fit2 <- lm(y ~ x)
fit2
pred <- predict(fit2)
pred
(y - pred)^2
dsse <- sum((y - pred)^2)
dsse
nsse <- sum((y - mean(y))^2)
nsse
dsse/nsse
ls()
rm(list = ls())
data(mtcars)
x <- mtcars$wt
y <- mtcars$mpg
fit <- lm(y ~ x)
fit
summary(fit)
sumCoef <- summary(fit)$coefficients
sumCoef[1,1] + c(-1,1) * qt(0.975, df = fit$df) * sumCoef[1,2]
sumCoef[1,1] + c(-1,1) * qt(0.975, df = fit$df) * sumCoef[1,2] * 2
sumCoef[2,1] + c(-1,1) * qt(0.975, df = fit$df) * sumCoef[2,2]
sumCoef[2,1] + c(-1,1) * qt(0.975, df = fit$df) * sumCoef[2,2] * 2
(sumCoef[2,1] + c(-1,1) * qt(0.975, df = fit$df) * sumCoef[2,2]) * 2
ls()
ssx <- sum((x - mean(x))^2)
n <- nrow(mtcars)
n
sqrt(1/n)
newx <- data.frame(x = c(min(x),mean(x),max(x)))
newx
data.frame(predict(fit, newdata = newx, interval = ("confidence")))
data.frame(predict(fit, newdata = newx, interval = ("prediction")))
newx <- data.frame(x = c(min(x),3,max(x)))
data.frame(predict(fit, newdata = newx, interval = ("prediction")))
confint(fit)
confint(fit) * 2
()
q()
