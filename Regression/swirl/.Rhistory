library(swirl)
swirl()
plot(child ~ parent, galton)
plot(jitter(child,4) ~ parent, galton)
regline <- lm(child ~ parent, galton)
regrline <- lm(child ~ parent, galton)
abline(regrline, lwd = 3, col = 'red')
summary(regrline)
cor(gpa_nor,gch_nor)
ls()
l_nor <- lm(gch_nor ~ gpa_nor)
q()
swirl()
library(swirl)
swirl()
fit <- lm(child ~ parent, data=galton)
summary(fit)
mean(fit$residual)
mean(fit$residuals)
cov(fit$residuals, galton$parent)
ols.ic <- fit$coef[1]
ols.slope <- fit$coef[2]
rhs - lhs
lhs - rhs
all.equal(lhs,rhs)
varChild <- galton$child
varChild <- var(galton$child)
varRes <- var(fit$residuals)
varEst <- var(est(fit))
varEst <- var()
varEst <- var(fit)
varEst <- var(est(als.ic,ols.slope))
varEst <- var(est(ols.ic,ols.slope))
varEst <- var(est(ols.slope,ols.ic))
all.equal(varChild,(varRes+varEst))
all.equal(varChild,(varEst+varRes))
all.equal(varChild,varEst+varRes)
efit <- lm(accel ~ mag+dist, attenu)
mean(efit$residuals)
cov(efit$residuals,attenu$mag)
cov(efit$residuals,attenu$dist)
q()
library(swirl)
swirl()
fit <- lm(child ~ parent, data = galton)
sqrt(sum(fit$residuals)/n-2)
sqrt(sum(fit$residuals^2)/(n-2))
summary(fit)$sigma
sqrt(deviance(fit)/(n-2)
)
mu <- mean(galton$child)
sTot <- sum((galton$child - mu)^2)
sRes <- deviance(fit)
1 - sRes/sTot
summary(fit)$r.sq
summary(fit)$r.squared
cor(galton$child,galton$parent)^2
q()
library(swirl)
swirl()
ones <- rep(1,nrows(galton))
ones <- rep(1,nrow(galton))
lm(child ~ ones + parent - 1, galton)
lm(child ~ parent, galton)
lm(child ~ 1, galton)
head(trees)
fit <- lm(Volumen ~ Girth + Height + Constant - 1, trees)
fit <- lm(Volume ~ Girth + Height + Constant - 1, trees)
trees2 <- elimitante("Girth", trees)
trees2 <- eliminate("Girth", trees)
head(trees2)
fit2 <- lm(Volume ~ Heigth + Constant - 1, trees2)
fit2 <- lm(Volume ~ Height + Constant - 1, trees2)
lapply(list(fit,fit2),coef)
ls()
q()
library(swirl)
swirl()
fit <- lm(y ~ x, out2)
plot(fit, which = 1)
fitno <- lm(y ~ x, out2[-1,])
plot(fitno, which = 1)
coef(fit) - coef(fitno)
head(dfbet(fit))
head(dfbeta(fit))
resno <- out2[1,"y"] - predict(fitno, out2[1,])
resid(fit)[1]
1 - resid(fit)[1]/resno
predict(fitno, out2[1,]
)
out2[1,"y"]
out2[1,"y"] - predict(fitno, out2[1,])
head(hatvalues(fit))
sigma <- sqrt()
sigma <- sqrt()
sigma <- sqrt(2)
sigma <- sqrt(deviance(fit)/df.residual(fit))
rstd <- resid(fit)/(sigma*sqrt(1-hatvalues(FIT)))
rstd <- resid(fit)/(sigma*sqrt(1-hatvalues(fit)))
head(cbind(rstd, rstandard(fit)))
plot(fit, which = 3)
plot(fit, which = 2)
sigma1 <- deviance(fitno)/df.residual(fitno)
sigma1 <- sqrt(deviance(fitno)/df.residual(fitno))
resid(fit)[1]/(sigma1* sqrt(1-hatvalues(fit)[1]))
view(rstudent(fit))
View(rstudent(fit))
dy <- predict(fitno, out2) - predict(fit, out)
dy <- predict(fitno, out2) - predict(fit, out2)
sum(sqrt(dy))/(2*sigmaË†2)
sum(sqrt(dy))/(2*sigma^2)
sum(dy^2)/(2*sigma^2)
plot(fit, which = 5)
swirl()
rpg1()
source('~/Desktop/datasciencecoursera/Regression/swirl/vifSims.R')
rgp1()
rgp2()
head(swiss)
mdl <- lm(Fertility ~ . , swiss)
vif(mdl)
mdl <- lm(Fertility ~ Agriculture + Education + Catholic + Infant.Mortality  , swiss)
mdl2 <- lm(Fertility ~ . -Examination, swiss)
vif(mdl2)
q()
library(swirl)
swirl()
x1c <- simbias()
apply(x1c, 1, mean)
fit1 <- lm(Fertility ~ Agriculture, swiss)
fit3 <- lm(Fertility ~ Agriculture + Examination + Education, swiss)
anova(fit1, fit3)
deviance(fit3)
d <- deviance(fit3)/43
n <- (deviance(fit1) - deviance(fit3))/2
n/d
pf(n/d,2,43,lower.tail=FALSE)
shapiro.test(fit3$residuals)
anova(fit1,fit3,fit5,fit6)
q()
library(swirl)
swirl()
install.packages("car")
swirl()
library("car", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
q()
library(swirl)
install.packages(c("AER", "AGD", "ape", "arm", "biclust", "boot", "caret", "cem", "chron", "class", "cluster", "coxme", "devtools", "diptest", "dplyr", "earth", "effects", "Fahrmeir", "foreign", "gam", "gee", "gstat", "gtools", "httr", "igraph", "ISwR", "KernSmooth", "lme4", "lmtest", "logcondens", "manipulate", "MASS", "mda", "mix", "mnormt", "MuMIn", "nlme", "nnet", "ordinal", "party", "plyr", "polyclip", "pryr", "R2WinBUGS", "RGA", "rgdal", "rgeos", "rmarkdown", "robustbase", "rpart", "scales", "sem", "semTools", "seriation", "shiny", "simsem", "sn", "sp", "spatial", "spatstat", "stringdist", "stringi", "strucchange", "survival", "systemfit", "testthat", "tis", "vcd", "VGAM", "XML"))
install.packages(c("AER", "AGD", "ape", "arm", "biclust", "boot",
)
)
install.packages(c("AER", "AGD", "ape", "arm", "biclust", "boot", "caret", "cem", "chron", "class", "cluster", "coxme", "devtools", "diptest", "dplyr", "earth", "effects", "Fahrmeir", "foreign", "gam", "gee", "gstat", "gtools", "httr", "igraph", "ISwR", "KernSmooth", "lme4", "lmtest", "logcondens", "manipulate", "MASS", "mda", "mix", "mnormt", "MuMIn", "nlme", "nnet", "ordinal", "party", "plyr", "polyclip", "pryr", "R2WinBUGS", "RGA", "rgdal", "rgeos", "rmarkdown", "robustbase", "rpart", "scales", "sem", "semTools", "seriation", "shiny", "simsem", "sn", "sp", "spatial", "spatstat", "stringdist", "stringi", "strucchange", "survival", "systemfit", "testthat", "tis", "vcd", "VGAM", "XML"))
install.packages(c("AER", "AGD", "ape", "arm", "biclust", "boot",
))
detach("package:utils", unload=TRUE)
detach("package:stats", unload=TRUE)
library("utils", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
detach("package:methods", unload=TRUE)
library("methods", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
detach("package:graphics", unload=TRUE)
detach("package:grDevices", unload=TRUE)
detach("package:datasets", unload=TRUE)
detach("package:methods", unload=TRUE)
library("methods", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install.packages(c("AER", "AGD", "ape", "arm", "biclust", "boot", "caret", "cem", "chron", "class", "cluster", "coxme", "devtools", "diptest", "dplyr", "earth", "effects", "Fahrmeir", "foreign", "gam", "gee", "gstat", "gtools", "httr", "igraph", "ISwR", "KernSmooth", "lme4", "lmtest", "logcondens", "manipulate", "MASS", "mda", "mix", "mnormt", "MuMIn", "nlme", "nnet", "ordinal", "party", "plyr", "polyclip", "pryr", "R2WinBUGS", "RGA", "rgdal", "rgeos", "rmarkdown", "robustbase", "rpart", "scales", "sem", "semTools", "seriation", "shiny", "simsem", "sn", "sp", "spatial", "spatstat", "stringdist", "stringi", "strucchange", "survival", "systemfit", "testthat", "tis", "vcd", "VGAM", "XML"))
library(swirl)
swirl()
0
x1c <- simbias()
apply(xc1, 1, mean)
apply(x1c, 1, mean)
fit1 <- lm(Fertility ~ Agriculture, data=swiss)
fit3 <- lm(Fertility ~ Agriculture + Examination + Education, data=swiss)
anova(fit1, fit3)
deviance(fit3)
d <- deviance(fit3)/43
n <- deviance(fit1)-deviance(fit3)
n <- (deviance(fit1)-deviance(fit3))/2
n/d
pf(n/d,2,43,lower.tail=FALSE)
shapiro.test(fit3$residuals)
anova(fit1, fit3, fit5, fit6)
ravenData
mdl <- glm(ravenWinNum ~ ravenScore, data = ravenData)
mdl <-
| glm(ravenWinNum ~ ravenScore, family=binomial, data=ravenData)
mdl <- glm(ravenWinNum ~ ravenScore, family=binomial, data=ravenData)
predict(mdl, data.frame(ravenScore=c(0,3,6)))
lodds <- predict(mdl, data.frame(ravenScore=c(0, 3, 6)))
exp(lodds)/(1+exp(lodds))
summary(mdl)
confint(mdl)
exp(confint(mdl))
anova(mdl)
qchisq(0.95,1)
var(rpois(1000, 50))
nxt()
head(hist)
head(hits)
class(hits[,'date'])
as.integer(head(hits[,'date']))
mdl <- glm(visits ~ date, poisson, hits)
summary(mdl)
exp(confint(mdl,"date"))
which.max(hits[,'visits'])
hits[704,]
lambda <- mdl$fitted.values[704]
qpois(.95,lambda)
offset=log(visits+1)
mdl <- glm(visits ~ date,offset=log(visits+1), poisson, hits)
mdl2 <- glm(formula = simplystats ~ date, family = poisson, data = hits, offset = log(visits + 1))
qpois(.95, mdl2$fitted.values[704])
q()
