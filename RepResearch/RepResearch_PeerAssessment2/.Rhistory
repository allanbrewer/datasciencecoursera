events[grep("DUST", events)]
unique(stormdata$PROPDMGEXP)
stormdata$PROPDMGEXP <- gsub("\\+|\\-|0|", "0", stormdata$PROPDMGEXP)
unique(stormdata$PROPDMGEXP)
stormdata$PROPDMGEXP <- gsub("0", "", stormdata$PROPDMGEXP)
unique(stormdata$PROPDMGEXP)
stormdata$PROPDMGEXP <- gsub("\\+|\\-|\\?", "0", stormdata$PROPDMGEXP)
unique(stormdata$PROPDMGEXP)
stormdata$PROPDMGEXP <- gsub("1", "10", stormdata$PROPDMGEXP)
unique(stormdata$PROPDMGEXP)
## Change the PROPDMGEXP Symbols into numbers
stormdata$PROPDMGEXP <- gsub("\\+|\\-|\\?", "0", stormdata$PROPDMGEXP)
stormdata$PROPDMGEXP <- gsub("1", "10", stormdata$PROPDMGEXP)
stormdata$PROPDMGEXP <- gsub("8", "100000000", stormdata$PROPDMGEXP)
stormdata$PROPDMGEXP <- gsub("3", "1000", stormdata$PROPDMGEXP)
stormdata$PROPDMGEXP <- gsub("4", "10000", stormdata$PROPDMGEXP)
stormdata$PROPDMGEXP <- gsub("5", "100000", stormdata$PROPDMGEXP)
stormdata$PROPDMGEXP <- gsub("6", "1000000", stormdata$PROPDMGEXP)
stormdata$PROPDMGEXP <- gsub("7", "10000000", stormdata$PROPDMGEXP)
stormdata$PROPDMGEXP <- gsub("8", "100000000", stormdata$PROPDMGEXP)
stormdata$PROPDMGEXP <- gsub("H|h", "100", stormdata$PROPDMGEXP)
stormdata$PROPDMGEXP <- gsub("K|k", "1000", stormdata$PROPDMGEXP)
stormdata$PROPDMGEXP <- gsub("M|m", "1000000", stormdata$PROPDMGEXP)
stormdata$PROPDMGEXP <- gsub("B|b", "1000000000", stormdata$PROPDMGEXP)
stormdata$PROPDMGEXP <- as.numeric(stormdata$PROPDMGEXP)
unique(stormdata$PROPDMGEXP)
unique(stormdata$CROPDMGEXP)
rm(list = ls())
if (!require(dplyr)) { install.packages("dplyr") }
if (!require(ggplot2)) { install.packages("ggplot2") }
stormdata <- read.csv("~/Desktop/NOAA_StormData.csv", stringsAsFactors = FALSE)
stormdata <- tbl_df(stormdata)
str(stormdata)
stormdata <- select(stormdata, EVTYPE, FATALITIES, INJURIES, PROPDMG, PROPDMGEXP, CROPDMG, CROPDMGEXP)
stormdata <- group_by(stormdata, EVTYPE)
stormdata
events <- unique(stormdata$EVTYPE)
events
stormdata$EVTYPE <- toupper(stormdata$EVTYPE)
## Remove all "Summary" Events from the data set
stormdata <- stormdata[!grepl("^SUMMARY", stormdata$EVTYPE), ]
## All Event Types to capital Letters
stormdata$EVTYPE <- toupper(stormdata$EVTYPE)
## Remove all "Summary" Events from the data set
stormdata <- stormdata[!grepl("^SUMMARY", stormdata$EVTYPE), ]
## Eliminate multiple spaces at the start, the middle, or end of the Event name
stormdata$EVTYPE <- gsub("^ +", "", stormdata$EVTYPE)
stormdata$EVTYPE <- gsub("$ +", "", stormdata$EVTYPE)
stormdata$EVTYPE <- gsub(" +", " ", stormdata$EVTYPE)
## Unite all Thunderstorms events
stormdata[grepl("THUNDERSTORM", stormdata$EVTYPE), ]$EVTYPE <- "THUNDERSTORM"
stormdata[grepl("TSTM", stormdata$EVTYPE), ]$EVTYPE <- "THUNDERSTORM"
## Unite all Tornado events
stormdata[grepl("TORNADO", stormdata$EVTYPE), ]$EVTYPE <- "TORNADO"
## Unite all Wind events
stormdata[grepl("WIND", stormdata$EVTYPE), ]$EVTYPE <- "WIND"
## Unite all Heat/Dry events
stormdata[grepl("HEAT", stormdata$EVTYPE), ]$EVTYPE <- "HEAT"
stormdata[grepl("HOT", stormdata$EVTYPE), ]$EVTYPE <- "HEAT"
stormdata[grepl("HIGH TEMP", stormdata$EVTYPE), ]$EVTYPE <- "HEAT"
stormdata[grepl("WARM", stormdata$EVTYPE), ]$EVTYPE <- "HEAT"
stormdata[grepl("DRY", stormdata$EVTYPE), ]$EVTYPE <- "DRY"
## Unite all Wet events
stormdata[grepl("WET", stormdata$EVTYPE), ]$EVTYPE <- "WET"
## Unite all Snow/Ice/Cold events
stormdata[grepl("BLIZZARD", stormdata$EVTYPE), ]$EVTYPE <- "BLIZZARD"
stormdata[grepl("SNOW", stormdata$EVTYPE), ]$EVTYPE <- "SNOW"
stormdata[grepl("ICE", stormdata$EVTYPE), ]$EVTYPE <- "ICE"
stormdata[grepl("COLD", stormdata$EVTYPE), ]$EVTYPE <- "COLD"
stormdata[grepl("LOW TEMP", stormdata$EVTYPE), ]$EVTYPE <- "COLD"
stormdata[grepl("COOL", stormdata$EVTYPE), ]$EVTYPE <- "COOL"
stormdata[grepl("FREEZ", stormdata$EVTYPE), ]$EVTYPE <- "FREEZ"
stormdata[grepl("WINTER", stormdata$EVTYPE), ]$EVTYPE <- "WINTER WEATHER"
## Unite all Volcano events
stormdata[grepl("VOLCAN", stormdata$EVTYPE), ]$EVTYPE <- "VOLCANO"
## Unite all Flood events
stormdata[grepl("FLOOD", stormdata$EVTYPE), ]$EVTYPE <- "FLOOD"
## Unite all Rain/Hail events
stormdata[grepl("RAIN", stormdata$EVTYPE), ]$EVTYPE <- "RAIN"
stormdata[grepl("SHOWER", stormdata$EVTYPE), ]$EVTYPE <- "RAIN"
stormdata[grepl("PRECIP", stormdata$EVTYPE), ]$EVTYPE <- "RAIN"
stormdata[grepl("HAIL", stormdata$EVTYPE), ]$EVTYPE <- "HAIL"
## Unite all Lightning events
stormdata[grepl("LIGHTNING", stormdata$EVTYPE), ]$EVTYPE <- "LIGHTNING"
## Unite all Hurricane/Typhoon events
stormdata[grepl("HURRICANE", stormdata$EVTYPE), ]$EVTYPE <- "HURRICANE/TYPHOON"
stormdata[grepl("TYPHOON", stormdata$EVTYPE), ]$EVTYPE <- "HURRICANE/TYPHOON"
## Unite all Tropical Storm events
stormdata[grepl("TROPICAL", stormdata$EVTYPE), ]$EVTYPE <- "TROPICAL STORM"
## Unite all Surf events
stormdata[grepl("SURF", stormdata$EVTYPE), ]$EVTYPE <- "SURF"
stormdata[grepl("WAVE", stormdata$EVTYPE), ]$EVTYPE <- "SURF"
## Unite all Tidal events
stormdata[grepl("TIDE", stormdata$EVTYPE), ]$EVTYPE <- "TIDE"
## Unite all Fire/Smoke events
stormdata[grepl("FIRE", stormdata$EVTYPE), ]$EVTYPE <- "FIRE"
stormdata[grepl("SMOKE", stormdata$EVTYPE), ]$EVTYPE <- "SMOKE"
## Unite all Dust events
stormdata[grepl("DUST", stormdata$EVTYPE), ]$EVTYPE <- "DUST"
## Unite all Fog events
stormdata[grepl("FOG", stormdata$EVTYPE), ]$EVTYPE <- "FOG"
events <- unique(stormdata$EVTYPE)
events
propexpo <- unique(stormdata$PROPDMGEXP)
expo
propexpo <- unique(stormdata$PROPDMGEXP)
propexpo
## Symbols for the Crop Damage Variable
cropexpo <- unique(stormdata$CROPDMGEXP)
cropexpo
stormdata$PROPDMGEXP <- gsub("\\+|\\-|\\?", "0", stormdata$PROPDMGEXP)
stormdata$PROPDMGEXP <- gsub("1", "10", stormdata$PROPDMGEXP)
stormdata$PROPDMGEXP <- gsub("2", "100", stormdata$PROPDMGEXP)
stormdata$PROPDMGEXP <- gsub("3", "1000", stormdata$PROPDMGEXP)
stormdata$PROPDMGEXP <- gsub("4", "10000", stormdata$PROPDMGEXP)
stormdata$PROPDMGEXP <- gsub("5", "100000", stormdata$PROPDMGEXP)
stormdata$PROPDMGEXP <- gsub("6", "1000000", stormdata$PROPDMGEXP)
stormdata$PROPDMGEXP <- gsub("7", "10000000", stormdata$PROPDMGEXP)
stormdata$PROPDMGEXP <- gsub("8", "100000000", stormdata$PROPDMGEXP)
stormdata$PROPDMGEXP <- gsub("H|h", "100", stormdata$PROPDMGEXP)
stormdata$PROPDMGEXP <- gsub("K|k", "1000", stormdata$PROPDMGEXP)
stormdata$PROPDMGEXP <- gsub("M|m", "1000000", stormdata$PROPDMGEXP)
stormdata$PROPDMGEXP <- gsub("B|b", "1000000000", stormdata$PROPDMGEXP)
stormdata$PROPDMGEXP <- as.numeric(stormdata$PROPDMGEXP)
stormdata$PROPDMGEXP[is.na(stormdata$PROPDMGEXP)] = 0
propexpo <- unique(stormdata$PROPDMGEXP)
propexpo
stormdata$CROPDMGEXP <- gsub("\\+|\\-|\\?", "0", stormdata$CROPDMGEXP)
stormdata$CROPDMGEXP <- gsub("1", "10", stormdata$CROPDMGEXP)
stormdata$CROPDMGEXP <- gsub("2", "100", stormdata$CROPDMGEXP)
stormdata$CROPDMGEXP <- gsub("3", "1000", stormdata$CROPDMGEXP)
stormdata$CROPDMGEXP <- gsub("4", "10000", stormdata$CROPDMGEXP)
stormdata$CROPDMGEXP <- gsub("5", "100000", stormdata$CROPDMGEXP)
stormdata$CROPDMGEXP <- gsub("6", "1000000", stormdata$CROPDMGEXP)
stormdata$CROPDMGEXP <- gsub("7", "10000000", stormdata$CROPDMGEXP)
stormdata$CROPDMGEXP <- gsub("8", "100000000", stormdata$CROPDMGEXP)
stormdata$CROPDMGEXP <- gsub("H|h", "100", stormdata$CROPDMGEXP)
stormdata$CROPDMGEXP <- gsub("K|k", "1000", stormdata$CROPDMGEXP)
stormdata$CROPDMGEXP <- gsub("M|m", "1000000", stormdata$CROPDMGEXP)
stormdata$CROPDMGEXP <- gsub("B|b", "1000000000", stormdata$CROPDMGEXP)
stormdata$CROPDMGEXP <- as.numeric(stormdata$CROPDMGEXP)
stormdata$CROPDMGEXP[is.na(stormdata$CROPDMGEXP)] = 0
cropexpo <- unique(stormdata$CROPDMGEXP)
cropexpo
if (!require(dplyr)) { install.packages("dplyr") }
if (!require(ggplot2)) { install.packages("ggplot2") }
?grp
?grep
event[grepl("AVALANCHE", event)
)
event[grepl("AVALANCHE", event)]
events[grepl("AVALANCHE", events)]
events[grepl("AVALANCE", events)]
events[grepl("AVALANCHE", events, fixed = FALSE)]
events[grepl("AVALANCE", events, fixed = FALSE)]
events[regexpr("AVALANCE", events)]
regexpr("AVALANCE", events)
gregexpr("AVALANCE", events)
regexec("AVALANCE", events)
gmatch("AVALANCE", events)
pmatch("AVALANCE", events)
pmatch("AVALANCHE", events)
amatch("AVALANCHE", events)
install.packages("stringdist")
library(stringdist)
amatch("AVALANCHE", events)
amatch("AVALANCE", events)
amatch("AVALANCE", events, maxDist = 1)
amatch("AVALANCE", events, maxDist = 2)
amatch("AVALANCE", events, maxDist = 3)
amatch("AVALANCE", events, maxDist = 4)
amatch("AVALANCE", events, maxDist = 5)
amatch("AVALANCE", events, maxDist = 6)
amatch("AVALANCE", events, maxDist = 10)
amatch("AVALANCHE", events, maxDist = 10)
amatch("AVALANC", events, maxDist = 10)
amatch("AVALANC", events, maxDist = 1)
amatch("WIDN", events, maxDist = 1)
events[amatch("WIDN", events, maxDist = 1)]
stormdata
stormdata <- mutate(stormdata, PROPERTY_DAMAGE_IN_$MILLIONS = PROPDMG * PROPDMGEXP / 1000000)
?MUTATE
?mutate
transmute(stormdata, PROPERTY_DAMAGE_IN_$MILLIONS = PROPDMG * PROPDMGEXP / 1000000)
transmute(stormdata, PROPERTY_DAMAGE_IN_$MILLIONS = PROPDMG * PROPDMGEXP / 1000000)
transmute(stormdata, PROPDMG * PROPDMGEXP / 1000000)
transmute(stormdata, PROPDMG * PROPDMGEXP / 1000000, CROPDMG * CROPDMGEXP / 1000000)
mutate(stormdata, PROPDMG * PROPDMGEXP / 1000000, CROPDMG * CROPDMGEXP / 1000000)
stormdata <- mutate(stormdata, PROPDMG * PROPDMGEXP / 1000000, CROPDMG * CROPDMGEXP / 1000000)
stormdata <- select(stormdata, -(PROPGMD:CROPDMGEXP))
stormdata <- select(stormdata, -(PROPDMG:CROPDMGEXP))
names(stormdata) <- c("Event_Type", "Fatalities", "Injuries", "Property_Damage_in_Millions", "Crop_Damage_in_Millions")
stormdata
rm(evetns, cropexpo, propexpo)
rm(events)
ls
ls()
data.ph <- group_by(select(stormdata, Event_Type, Fatalities, Injuries), Event_Type)
rm(stormdata)
stormdata <- read.csv(bzfile("~/Desktop/NOAA_StormData.csv.bz2"), stringsAsFactors = FALSE)
stormdata <- tbl_df(stormdata)
stormdata <- select(stormdata, EVTYPE, FATALITIES, INJURIES, PROPDMG, PROPDMGEXP, CROPDMG, CROPDMGEXP)
stormdata
## All Event Types to capital Letters
stormdata$EVTYPE <- toupper(stormdata$EVTYPE)
## Remove all "Summary" Events from the data set
stormdata <- stormdata[!grepl("^SUMMARY", stormdata$EVTYPE), ]
## Eliminate multiple spaces at the start, the middle, or end of the Event name
stormdata$EVTYPE <- gsub("^ +", "", stormdata$EVTYPE)
stormdata$EVTYPE <- gsub("$ +", "", stormdata$EVTYPE)
stormdata$EVTYPE <- gsub(" +", " ", stormdata$EVTYPE)
## Unite all Thunderstorms events
stormdata[grepl("THUNDERSTORM", stormdata$EVTYPE), ]$EVTYPE <- "THUNDERSTORM"
stormdata[grepl("TSTM", stormdata$EVTYPE), ]$EVTYPE <- "THUNDERSTORM"
## Unite all Tornado events
stormdata[grepl("TORNADO", stormdata$EVTYPE), ]$EVTYPE <- "TORNADO"
## Unite all Wind events
stormdata[grepl("WIND", stormdata$EVTYPE), ]$EVTYPE <- "WIND"
## Unite all Heat/Dry events
stormdata[grepl("HEAT", stormdata$EVTYPE), ]$EVTYPE <- "HEAT"
stormdata[grepl("HOT", stormdata$EVTYPE), ]$EVTYPE <- "HEAT"
stormdata[grepl("HIGH TEMP", stormdata$EVTYPE), ]$EVTYPE <- "HEAT"
stormdata[grepl("WARM", stormdata$EVTYPE), ]$EVTYPE <- "HEAT"
stormdata[grepl("DRY", stormdata$EVTYPE), ]$EVTYPE <- "DRY"
## Unite all Wet events
stormdata[grepl("WET", stormdata$EVTYPE), ]$EVTYPE <- "WET"
## Unite all Snow/Ice/Cold events
stormdata[grepl("BLIZZARD", stormdata$EVTYPE), ]$EVTYPE <- "BLIZZARD"
stormdata[grepl("SNOW", stormdata$EVTYPE), ]$EVTYPE <- "SNOW"
stormdata[grepl("ICE", stormdata$EVTYPE), ]$EVTYPE <- "ICE"
stormdata[grepl("COLD", stormdata$EVTYPE), ]$EVTYPE <- "COLD"
stormdata[grepl("LOW TEMP", stormdata$EVTYPE), ]$EVTYPE <- "COLD"
stormdata[grepl("COOL", stormdata$EVTYPE), ]$EVTYPE <- "COOL"
stormdata[grepl("FREEZ", stormdata$EVTYPE), ]$EVTYPE <- "FREEZ"
stormdata[grepl("WINTER", stormdata$EVTYPE), ]$EVTYPE <- "WINTER WEATHER"
## Unite all Volcano events
stormdata[grepl("VOLCAN", stormdata$EVTYPE), ]$EVTYPE <- "VOLCANO"
## Unite all Flood events
stormdata[grepl("FLOOD", stormdata$EVTYPE), ]$EVTYPE <- "FLOOD"
## Unite all Rain/Hail events
stormdata[grepl("RAIN", stormdata$EVTYPE), ]$EVTYPE <- "RAIN"
stormdata[grepl("SHOWER", stormdata$EVTYPE), ]$EVTYPE <- "RAIN"
stormdata[grepl("PRECIP", stormdata$EVTYPE), ]$EVTYPE <- "RAIN"
stormdata[grepl("HAIL", stormdata$EVTYPE), ]$EVTYPE <- "HAIL"
## Unite all Lightning events
stormdata[grepl("LIGHTNING", stormdata$EVTYPE), ]$EVTYPE <- "LIGHTNING"
## Unite all Hurricane/Typhoon events
stormdata[grepl("HURRICANE", stormdata$EVTYPE), ]$EVTYPE <- "HURRICANE/TYPHOON"
stormdata[grepl("TYPHOON", stormdata$EVTYPE), ]$EVTYPE <- "HURRICANE/TYPHOON"
## Unite all Tropical Storm events
stormdata[grepl("TROPICAL", stormdata$EVTYPE), ]$EVTYPE <- "TROPICAL STORM"
## Unite all Surf events
stormdata[grepl("SURF", stormdata$EVTYPE), ]$EVTYPE <- "SURF"
stormdata[grepl("WAVE", stormdata$EVTYPE), ]$EVTYPE <- "SURF"
## Unite all Tidal events
stormdata[grepl("TIDE", stormdata$EVTYPE), ]$EVTYPE <- "TIDE"
## Unite all Fire/Smoke events
stormdata[grepl("FIRE", stormdata$EVTYPE), ]$EVTYPE <- "FIRE"
stormdata[grepl("SMOKE", stormdata$EVTYPE), ]$EVTYPE <- "SMOKE"
## Unite all Dust events
stormdata[grepl("DUST", stormdata$EVTYPE), ]$EVTYPE <- "DUST"
## Unite all Fog events
stormdata[grepl("FOG", stormdata$EVTYPE), ]$EVTYPE <- "FOG"
## Change the PROPDMGEXP Symbols into numbers
stormdata$PROPDMGEXP <- gsub("\\+|\\-|\\?", "0", stormdata$PROPDMGEXP)
stormdata$PROPDMGEXP <- gsub("1", "10", stormdata$PROPDMGEXP)
stormdata$PROPDMGEXP <- gsub("2", "100", stormdata$PROPDMGEXP)
stormdata$PROPDMGEXP <- gsub("3", "1000", stormdata$PROPDMGEXP)
stormdata$PROPDMGEXP <- gsub("4", "10000", stormdata$PROPDMGEXP)
stormdata$PROPDMGEXP <- gsub("5", "100000", stormdata$PROPDMGEXP)
stormdata$PROPDMGEXP <- gsub("6", "1000000", stormdata$PROPDMGEXP)
stormdata$PROPDMGEXP <- gsub("7", "10000000", stormdata$PROPDMGEXP)
stormdata$PROPDMGEXP <- gsub("8", "100000000", stormdata$PROPDMGEXP)
stormdata$PROPDMGEXP <- gsub("H|h", "100", stormdata$PROPDMGEXP)
stormdata$PROPDMGEXP <- gsub("K|k", "1000", stormdata$PROPDMGEXP)
stormdata$PROPDMGEXP <- gsub("M|m", "1000000", stormdata$PROPDMGEXP)
stormdata$PROPDMGEXP <- gsub("B|b", "1000000000", stormdata$PROPDMGEXP)
stormdata$PROPDMGEXP <- as.numeric(stormdata$PROPDMGEXP)
stormdata$PROPDMGEXP[is.na(stormdata$PROPDMGEXP)] = 0
## Change the CROPDMGEXP Symbols into numbers
stormdata$CROPDMGEXP <- gsub("\\+|\\-|\\?", "0", stormdata$CROPDMGEXP)
stormdata$CROPDMGEXP <- gsub("1", "10", stormdata$CROPDMGEXP)
stormdata$CROPDMGEXP <- gsub("2", "100", stormdata$CROPDMGEXP)
stormdata$CROPDMGEXP <- gsub("3", "1000", stormdata$CROPDMGEXP)
stormdata$CROPDMGEXP <- gsub("4", "10000", stormdata$CROPDMGEXP)
stormdata$CROPDMGEXP <- gsub("5", "100000", stormdata$CROPDMGEXP)
stormdata$CROPDMGEXP <- gsub("6", "1000000", stormdata$CROPDMGEXP)
stormdata$CROPDMGEXP <- gsub("7", "10000000", stormdata$CROPDMGEXP)
stormdata$CROPDMGEXP <- gsub("8", "100000000", stormdata$CROPDMGEXP)
stormdata$CROPDMGEXP <- gsub("H|h", "100", stormdata$CROPDMGEXP)
stormdata$CROPDMGEXP <- gsub("K|k", "1000", stormdata$CROPDMGEXP)
stormdata$CROPDMGEXP <- gsub("M|m", "1000000", stormdata$CROPDMGEXP)
stormdata$CROPDMGEXP <- gsub("B|b", "1000000000", stormdata$CROPDMGEXP)
stormdata$CROPDMGEXP <- as.numeric(stormdata$CROPDMGEXP)
stormdata$CROPDMGEXP[is.na(stormdata$CROPDMGEXP)] = 0
stormdata <- mutate(stormdata, PROPDMG * PROPDMGEXP / 1000000, CROPDMG * CROPDMGEXP / 1000000)
stormdata <- select(stormdata, -(PROPDMG:CROPDMGEXP))
stormdata
names(stormdata) <- c("Event_Type", "Fatalities", "Injuries", "Property_Damage_in_Millions", "Crop_Damage_in_Millions")
data.ph <- group_by(select(stormdata, Event_Type, Fatalities, Injuries), Event_Type)
data.ec <- group_by(select(stormdata, Event_Type, Property_Damage_in_Millions, Crop_Damage_in_Millions), Event_Type)
rm(stormdata)
data.ec
data.ph
data.ph <- mutate(data.ph, Total_Casualties=Fatalities+Injuries)
data.ec <- mutate(data.ec, Total_Damage=Property_Damage_in_Millions+Crop_Damage_in_Millions)
data.ph
data.ec
summarize(data.ec, sum(Property_Damage_in_Millions), sum(Crop_Damage_in_Millions), sum(Total_Damage))
summarize(data.ec, Property_Damage_in_Millions = sum(Property_Damage_in_Millions), Crop_Damage_in_Millions = sum(Crop_Damage_in_Millions), Total_Damage = sum(Total_Damage))
arrange(summarize(data.ec, Property_Damage_in_Millions = sum(Property_Damage_in_Millions), Crop_Damage_in_Millions = sum(Crop_Damage_in_Millions), Total_Damage = sum(Total_Damage)), Total_Damage)
arrange(summarize(data.ec, Property_Damage_in_Millions = sum(Property_Damage_in_Millions), Crop_Damage_in_Millions = sum(Crop_Damage_in_Millions), Total_Damage = sum(Total_Damage)), desc(Total_Damage))
arrange(summarize(data.ph, Fatalities = sum(Fatalities), Injuries = sum(Injuries), Total_Casualties = sum(Total_Casualties)), desc(Total_Casualties))
plot1 <- ggplot(ph.sum, aes(x = Event_Type, y = c(Fatalities, Injuries, Total_Casualties) colour = y))
plot1 <- ggplot(ph.sum, aes(x = Event_Type, y = c(Fatalities, Injuries, Total_Casualties), colour = y))
ph.sum <- arrange(summarize(data.ph, Fatalities = sum(Fatalities), Injuries = sum(Injuries), Total_Casualties = sum(Total_Casualties)), desc(Total_Casualties))
ec.sum <- arrange(summarize(data.ec, Property_Damage_in_Millions = sum(Property_Damage_in_Millions), Crop_Damage_in_Millions = sum(Crop_Damage_in_Millions), Total_Damage_in_Millions = sum(Total_Damage)), desc(Total_Damage))
data.ec <- mutate(data.ec, Total_Damage=Property_Damage_in_Millions+Crop_Damage_in_Millions)
data.ec
ec.sum <- arrange(summarize(data.ec, Property_Damage_in_Millions = sum(Property_Damage_in_Millions), Crop_Damage_in_Millions = sum(Crop_Damage_in_Millions), Total_Damage_in_Millions = sum(Total_Damage)), desc(Total_Damage))
ec.sum <- arrange(summarize(data.ec, Property_Damage_in_Millions = sum(Property_Damage_in_Millions), Crop_Damage_in_Millions = sum(Crop_Damage_in_Millions), Total_Damage_in_Millions = sum(Total_Damage)), desc(Total_Damage_in_Millions))
plot1 <- ggplot(ph.sum, aes(x = Event_Type, y = c(Fatalities, Injuries, Total_Casualties), colour = y))
plot1 <- plot1 + labs(title = "Casualties by Event Type in Across the US", x = "Event Type", y = "Casualties")
plot1 <- plot1 + geom_bar(aes(Event_Type, Fatalities))
plot1
plot1 <- ggplot(ph.sum, aes(x = Event_Type, y = c(Fatalities, Injuries, Total_Casualties)))
plot1 <- plot1 + labs(title = "Casualties by Event Type in Across the US", x = "Event Type", y = "Casualties")
plot1 <- plot1 + geom_bar(aes(Event_Type, Fatalities))
plot1
plot1 <- ggplot(ph.sum, aes(x = Event_Type, y = Fatalities))
plot1 <- plot1 + labs(title = "Casualties by Event Type in Across the US", x = "Event Type", y = "Casualties")
plot1 <- plot1 + geom_bar(aes(Event_Type, Fatalities))
plot1
plot1 <- ggplot(ph.sum[1:10], aes(x = Event_Type, y = Fatalities))
plot1 <- plot1 + labs(title = "Casualties by Event Type in Across the US", x = "Event Type", y = "Casualties")
plot1 <- plot1 + geom_bar(aes(Event_Type, Fatalities))
plot1
plot1 <- ggplot(ph.sum[1:10], aes(x = Event_Type[1:10], y = Fatalities[1:10]))
plot1 <- plot1 + labs(title = "Casualties by Event Type in Across the US", x = "Event Type", y = "Casualties")
plot1 <- plot1 + geom_bar(aes(Event_Type, Fatalities))
plot1
ph.sum.plot <- ph.sum[1:10,]
ph.sum.plot <- ph.sum[1:10,]
plot1 <- ggplot(ph.sum, aes(x = Event_Type, y = c(Fatalities, Injuries, Total_Casualties), colour = Event_Type))
plot1 <- plot1 + labs(title = "Casualties by Event Type in Across the US", x = "Event Type", y = "Casualties")
plot1 <- plot1 + geom_bar(stat = "identity")
plot1
plot1 <- ggplot(ph.sum, aes(x = Event_Type, y = Total_Casualties, colour = Event_Type))
plot1 <- plot1 + labs(title = "Casualties by Event Type in Across the US", x = "Event Type", y = "Casualties")
plot1 <- plot1 + geom_bar(stat = "identity")
plot1
plot1 <- ggplot(ph.sum.plot, aes(x = Event_Type, y = Total_Casualties, colour = Event_Type))
plot1 <- plot1 + labs(title = "Casualties by Event Type in Across the US", x = "Event Type", y = "Casualties")
plot1 <- plot1 + geom_bar(stat = "identity")
plot1
ph.sum.plot
plot1 <- ggplot(ph.sum.plot, aes(x = Event_Type, y = Total_Casualties, colour = Event_Type))
plot1 <- plot1 + labs(title = "Casualties by Event Type in Across the US", x = "Event Type", y = "Casualties")
plot1 <- plot1 + geom_bar(stat = "identity") + coord_flip()
plot1 <- ggplot(ph.sum.plot, aes(x = Event_Type, y = Total_Casualties, fill = Event_Type))
plot1 <- plot1 + labs(title = "Casualties by Event Type in Across the US", x = "Event Type", y = "Casualties")
plot1 <- plot1 + geom_bar(stat = "identity") + coord_flip()
plot1
plot1 <- ggplot(ph.sum.plot, aes(x = reorder(Event_Type, desc(Total_Casualties)), y = Total_Casualties, fill = Event_Type))
plot1 <- plot1 + labs(title = "Casualties by Event Type Across the US", x = "Event Type", y = "Casualties")
plot1 <- plot1 + geom_bar(stat = "identity") + coord_flip()
plot1
ec.sum.plot <- ec.sum[1:10,]
plot2 <- ggplot(ec.sum.plot, aes(x = reorder(Event_Type, desc(Total_Damage_in_Millions)), y = Total_Damage_in_Millions, fill = Event_Type))
plot2 <- plot2 + labs(title = "Economic Damage by Event Type Across the US", x = "Event Type", y = "Damage in $ Millions")
plot2 <- plot2 + geom_bar(stat = "identity") + coord_flip()
plot2
ec.sum
ph.max <- arrange(summarize(data.ph, Fatalities = max(Fatalities), Injuries = max(Injuries), Total_Casualties = max(Total_Casualties)), desc(Total_Casualties))
ec.max <- arrange(summarize(data.ec, Property_Damage_in_Millions = max(Property_Damage_in_Millions), Crop_Damage_in_Millions = max(Crop_Damage_in_Millions), Total_Damage_in_Millions = max(Total_Damage)), desc(Total_Damage_in_Millions))
ph.max
if (!require(reshape2)) { install.packages("reshape2") }
if (!require(knitr)) { install.packages("knitr") }
kable(ph.sum)
kable(ph.sum[1:20,])
ph.sum.plot <- ph.sum[1:10,]
ph.sum.plt <- melt(ph.sum.plot, id.vars = c("Fatalities", "Injuries", "Total_Caualties"))
ph.sum.plt <- melt(ph.sum.plot, id.vars = c("Fatalities", "Injuries", "Total_Casualties"))
ph.sum.plot <- melt(ph.sum.plot, id.vars = c("Fatalities", "Injuries", "Total_Casualties"))
rm(ph.sum.plt)
ph.sum.plot
ph.sum.plot <- ph.sum[1:10,]
ph.sum.plot <- melt(ph.sum.plot, id = "Event_Type", measure = c("Fatalities", "Injuries", "Total_Casualties"), value.name = "Total")
ph.sum.plot <- ph.sum[1:10,]
ph.sum.plot <- melt(ph.sum.plot, id = "Event_Type", measure = c("Fatalities", "Injuries", "Total_Casualties"), value.name = "Total")
ph.sum.plot
ph.sum.plot <- melt(ph.sum.plot, id = "Event_Type", measure = c("Fatalities", "Injuries", "Total_Casualties"), value.name = "Total")
plot1 <- ggplot(ph.sum.plot, aes(x = reorder(Event_Type, desc(Total_Casualties)), y = Total, fill = Event_Type))
plot1 <- plot1 + labs(title = "Casualties by Event Type Across the US", x = "Event Type", y = "Casualties")
plot1 <- plot1 + geom_bar(stat = "identity") + coord_flip()
plot1
plot1 <- ggplot(ph.sum.plot, aes(x = reorder(Event_Type, desc(Total)), y = Total, fill = Event_Type))
plot1 <- plot1 + labs(title = "Casualties by Event Type Across the US", x = "Event Type", y = "Casualties")
plot1 <- plot1 + geom_bar(stat = "identity") + coord_flip()
plot1
ph.sum.plot
ph.sum.plot <- ph.sum[1:10,]
ph.sum.plot <- melt(ph.sum.plot, id = "Event_Type", measure = c("Fatalities", "Injuries", "Total_Casualties"), value.name = "Total")
plot1 <- ggplot(ph.sum.plot, aes(x = reorder(Event_Type, desc(Total)), y = Total, fill = Event_Type))
plot1 <- plot1 + labs(title = "Casualties by Event Type Across the US", x = "Event Type", y = "Casualties")
plot1 <- plot1 + geom_bar(stat = "identity") + coord_flip()
plot1
plot1 <- ggplot(ph.sum.plot, aes(x = reorder(variable, desc(Total)), y = Total, fill = Event_Type))
plot1 <- plot1 + labs(title = "Casualties by Event Type Across the US", x = "Event Type", y = "Casualties")
plot1 <- plot1 + geom_bar(stat = "identity") + coord_flip()
plot1
plot1 <- ggplot(ph.sum.plot, aes(x = reorder(Event_Type, desc(Total)), y = variable, fill = Event_Type))
plot1 <- plot1 + labs(title = "Casualties by Event Type Across the US", x = "Event Type", y = "Casualties")
plot1 <- plot1 + geom_bar(stat = "identity") + coord_flip()
plot1
ph.sum.plot <- melt(ph.sum.plot, id = "Event_Type", measure = c("Fatalities", "Injuries"), value.name = "Total")
## Create the plot
plot1 <- ggplot(ph.sum.plot, aes(x = reorder(Event_Type, desc(Total)), y = Total, fill = Event_Type))
plot1 <- plot1 + labs(title = "Casualties by Event Type Across the US", x = "Event Type", y = "Casualties")
plot1 <- plot1 + geom_bar(stat = "identity") + coord_flip()
ph.sum.plot <- ph.sum[1:10,]
ph.sum
ph.sum.plot <- melt(ph.sum.plot, id = "Event_Type", measure = c("Fatalities", "Injuries"), value.name = "Total")
plot1 <- ggplot(ph.sum.plot, aes(x = reorder(Event_Type, desc(Total)), y = Total, fill = Event_Type))
plot1 <- plot1 + labs(title = "Casualties by Event Type Across the US", x = "Event Type", y = "Casualties")
plot1 <- plot1 + geom_bar(stat = "identity") + coord_flip()
plot1
rm(plot1)
plot1 <- ggplot(ph.sum.plot, aes(x = reorder(Event_Type, desc(Total)), y = Total, fill = Event_Type))
plot1 <- plot1 + labs(title = "Casualties by Event Type Across the US", x = "Event Type", y = "Casualties")
plot1 <- plot1 + geom_bar(stat = "identity") + coord_flip()
plot1
ph.sum.plot <- ph.sum[1:10,]
ph.sum.plot <- melt(ph.sum.plot, id = "Event_Type", measure = c("Fatalities", "Injuries", "Total_Casualties"), value.name = "Total")
plot1 <- ggplot(ph.sum.plot, aes(x = reorder(Event_Type, desc(Total)), y = Total, fill = Event_Type))
plot1 <- plot1 + labs(title = "Casualties by Event Type Across the US", x = "Event Type", y = "Casualties")
plot1 <- plot1 + geom_bar(position = "dodge"",stat = "identity") + coord_flip()
plot1
```
plot1 <- plot1 + geom_bar(position = "dodge",stat = "identity") + coord_flip()
plot1
ph.sum.plot <- ph.sum[1:10,]
ph.sum.plot <- melt(ph.sum.plot, id.vars = "Event_Type")
ph.sum.plot
ph.sum.plot <- ph.sum[1:10,]
ph.sum.plot <- melt(ph.sum.plot, id.vars = "Event_Type")
## Create the plot
plot1 <- ggplot(ph.sum.plot, aes(x = Event_Type, y = Total, fill = Event_Type, group = variable))
plot1 <- plot1 + labs(title = "Casualties by Event Type Across the US", x = "Event Type", y = "Casualties")
plot1 <- plot1 + geom_bar(position = "dodge",stat = "identity") + coord_flip()
plot1
ph.sum.plot <- ph.sum[1:10,]
ph.sum.plot <- melt(ph.sum.plot, id.vars = "Event_Type")
## Create the plot
plot1 <- ggplot(ph.sum.plot, aes(x = Event_Type, y = value, fill = Event_Type, group = variable))
plot1 <- plot1 + labs(title = "Casualties by Event Type Across the US", x = "Event Type", y = "Casualties")
plot1 <- plot1 + geom_bar(position = "dodge",stat = "identity") + coord_flip()
plot1
ph.sum.plot <- ph.sum[1:10,]
ph.sum.plot <- melt(ph.sum.plot, id.vars = "Event_Type")
## Create the plot
plot1 <- ggplot(ph.sum.plot, aes(x = Event_Type, y = value, fill = variable, group = variable))
plot1 <- plot1 + labs(title = "Casualties by Event Type Across the US", x = "Event Type", y = "Casualties")
plot1 <- plot1 + geom_bar(position = "dodge",stat = "identity") + coord_flip()
plot1
ec.sum.plot <- ec.sum[1:10,]
ec.sum.plot <- melt(ec.sum.plot, id.vars = "Event_Type")
## Create the plot
plot2 <- ggplot(ec.sum.plot, aes(x = Event_Type, y = value, fill = variable, group = variable))
plot2 <- plot2 + labs(title = "Economic Damage by Event Type Across the US", x = "Event Type", y = "Damage in $ Millions")
plot2 <- plot2 + geom_bar(position = "dodge",stat = "identity") + coord_flip()
plot2
ph.sum.plot <- ph.sum[1:10,]
ph.sum.plot <- melt(ph.sum.plot, id.vars = "Event_Type")
## Create the plot
plot1 <- ggplot(ph.sum.plot, aes(x = arrange(Event_Type, desc(value)), y = value, fill = variable, group = variable))
plot1 <- plot1 + labs(title = "Casualties by Event Type Across the US", x = "Event Type", y = "Casualties")
plot1 <- plot1 + geom_bar(position = "dodge",stat = "identity") + coord_flip()
plot1
## Select only the top ten Events to be ploted
ph.sum.plot <- ph.sum[1:10,]
ph.sum.plot <- melt(ph.sum.plot, id.vars = "Event_Type")
## Create the plot
plot1 <- ggplot(ph.sum.plot, aes(x = reorder(Event_Type, desc(value)), y = value, fill = variable, group = variable))
plot1 <- plot1 + labs(title = "Casualties by Event Type Across the US", x = "Event Type", y = "Casualties")
plot1 <- plot1 + geom_bar(position = "dodge",stat = "identity") + coord_flip()
plot1
rm(list=ls())
source('~/.active-rstudio-document', echo=TRUE)
ph.max <- arrange(summarize(data.ph, Max_Fatalities = max(Fatalities), Max_Injuries = max(Injuries), Max_Total_Casualties = max(Total_Casualties)), desc(Max_Total_Casualties))
ec.max <- arrange(summarize(data.ec, Max_Property_Damage_in_Millions = max(Property_Damage_in_Millions), Max_Crop_Damage_in_Millions = max(Crop_Damage_in_Millions), Max_Total_Damage_in_Millions = max(Total_Damage)), desc(Max_Total_Damage_in_Millions))
kable(ph.sum[1:20,])
## Print the Max Public Health Summary Table
kable(ph.max[1:20,])
ph.sum.plot <- ph.sum[1:10,]
ph.sum.plot <- melt(ph.sum.plot, id.vars = "Event_Type")
## Create the plot
plot1 <- ggplot(ph.sum.plot, aes(x = reorder(Event_Type, desc(value)), y = value, fill = variable, group = variable))
plot1 <- plot1 + labs(title = "Casualties by Event Type Across the US", x = "Event Type", y = "Casualties")
plot1 <- plot1 + geom_bar(position = "dodge",stat = "identity") + coord_flip()
plot1
kable(ec.sum[1:20,])
kable(ec.max[1:20,])
ec.sum.plot <- ec.sum[1:10,]
ec.sum.plot <- melt(ec.sum.plot, id.vars = "Event_Type")
plot2 <- ggplot(ec.sum.plot, aes(x = reorder(Event_Type, desc(value)), y = value, fill = variable, group = variable))
plot2 <- plot2 + labs(title = "Economic Damage by Event Type Across the US", x = "Event Type", y = "Damage in $ Millions")
plot2 <- plot2 + geom_bar(position = "dodge",stat = "identity") + coord_flip()
plot2
plot1
plot2
rm(list=ls())
